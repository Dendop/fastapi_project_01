name: Build and Deploy Code

on: [push, pull_request]

jobs:
    build:
        environment: testing
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          SECRET_KEY_TOKEN: ${{ secrets.SECRET_KEY_TOKEN }}
          ALGORITHM: ${{ secrets.ALGORITHM }}
          PYTHONPATH: ${{ secrets.PYTHONPATH }}
        services:
          postgres:
            image: postgres
            env:
              POSTGRES_PASSWORD: ${{ secrets.POSTGRESS_PASSWORD }}
              POSTGRES_DB: ${{ secrets.POSTGRES_DB }} #for efficieny maybe fastapi_01_test
            ports:
              - 5432:5432
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5
        runs-on: ubuntu-latest
        steps:
            - name: pulling git repo
              uses: actions/checkout@v2

            - name: Install python version 3.9
              uses: actions/setup-python@v2
              with:
                python-version: "3.9"

            - name: update pip
              run: python -m pip install --upgrade pip

            - name: installing dependencies
              run: pip install -r requirements.txt

            - name: test with pytest
              run: |
                pip install pytest
                pytest
            

            # for docker 
            # - name: Login to Docker Hub   
            #   uses: docker/login-action@v3
            #   with:
            #     username: {{ secrets.DOCKER_USERNAME }}
            #     password: {{ secrets.DOCKERHUB_TOKEN }}

            # - name: Set up Docker Buildx
            #   uses: docker/setup-buildx-action@v3

            # - name: Build and push
            #   uses: docker/build-push-action@v6
            #   with:
            #     platforms: linux/amd64,linux/arm64
            #     file: ./Dockerfile
            #     push: true
            #     tags: {{ secrets.DOCKER_USERNAME }}/{{ github.event.repository.name }}:latest
    deploy:
       environment: production
       runs-on: ubuntu-latest
       needs: [build] #with this we set sequential order, deploy will run only after 'build'

       steps:
         - name: deploy practice on Ubuntu VM
           uses: appleboy/ssh-action@v1
           with:
            host: ${{ secrets.PROD_U_HOST }}
            username: ${{ secrets.PROD_U_USERNAME }}
            password: ${{ secrets.PROD_U_PASSWORD }}
            script: |
              cd app/src && \
              git pull && \
              echo ${{ secrets.PROD_U_PASSWORD }} | sudo -S systemctl restart fastapidemo        